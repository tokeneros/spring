<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- DI的使用 -->
    <bean id="knight" class="com.springinaction.knights.BraveKnight">
        <!--
        注入Quest Bean
        构造函数参数
        -->
        <constructor-arg ref="quest"/>
    </bean>

    <bean id="quest" class="com.springinaction.knights.SlayDragonQuest">
        <!--
        创建SlayDragonQuest
        使用Spring表达式语言，将System.out(这是一个PrintStream)传入到了SlayDragonQuest的构造器中
        -->
        <constructor-arg value="#{T(System).out}" />
    </bean>

    <!-- AOP的概念 -->
    <!-- 申明Minstrel bean  -->
    <bean id="minstrel" class="com.springinaction.knights.Minstrel">
        <constructor-arg value="#{T(System).out}" />
    </bean>

    <aop:config>
        <aop:aspect ref="minstrel">
            <!-- 定义切点 -->
            <aop:pointcut id="embark" expression="execution(* *.embarkOnQuest(..))"/>
            <!-- 声明前置通知 -->
            <aop:before pointcut-ref="embark" method="singBeforeQuest"/>
            <!-- 声明后置通知 -->
            <aop:after pointcut-ref="embark" method="singAfterQuest"/>
        </aop:aspect>
    </aop:config>

</beans>
